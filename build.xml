<project name="APIConnect-CICD" default="ci" basedir=".">
    <property name="API_NAME" value="loan-api"/>
    <property name="PRODUCT_NAME" value="loan-product"/>
    <property name="API_VERSION" value="1.0.0"/>
    <property name="CATALOG_NAME" value="prod"/>
    <property name="APIC_SERVER" value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
    <property name="APIC_ORG" value="indusapi-np"/>

    <!-- Default timestamp -->
    <tstamp>
        <format property="DSTAMP" pattern="yyyy-MM-dd"/>
        <format property="TSTAMP" pattern="HH-mm-ss"/>
    </tstamp>

    <!-- Login -->
    <target name="login">
        <echo message="🔐 Logging in to API Connect..."/>
        <exec executable="apic">
            <arg value="login"/>
            <arg value="--server"/>
            <arg value="${APIC_SERVER}"/>
            <arg value="--username"/>
            <arg value="your-username"/>
            <arg value="--password"/>
            <arg value="your-password"/>
            <arg value="--realm"/>
            <arg value="provider/default-idp-1"/>
        </exec>
    </target>

    <!-- Lint -->
    <target name="lint">
        <echo message="🔎 Validating OpenAPI Spec ${API_NAME}_${API_VERSION}.yaml"/>
        <exec executable="apic">
            <arg value="validate"/>
            <arg value="${API_NAME}_${API_VERSION}.yaml"/>
        </exec>
    </target>

    <!-- Publish Product -->
    <target name="publish" depends="lint,login">
        <echo message="🚀 Publishing Product ${PRODUCT_NAME}:${API_VERSION} to catalog ${CATALOG_NAME}"/>
        <exec executable="apic">
            <arg value="products:publish"/>
            <arg value="--scope"/>
            <arg value="catalog"/>
            <arg value="--catalog"/>
            <arg value="${CATALOG_NAME}"/>
            <arg value="--server"/>
            <arg value="${APIC_SERVER}"/>
            <arg value="--org"/>
            <arg value="${APIC_ORG}"/>
            <arg value="${PRODUCT_NAME}_${API_VERSION}.yaml"/>
        </exec>
    </target>

    <!-- Backup API and Product -->
    <target name="backup">
        <echo message="📦 Backing up API ${API_NAME}:${API_VERSION} & Product ${PRODUCT_NAME}:${API_VERSION}"/>

        <!-- Ensure folders exist -->
        <mkdir dir="${basedir}/apis/${API_NAME}"/>
        <mkdir dir="${basedir}/products/${PRODUCT_NAME}"/>

        <!-- Copy artifacts -->
        <copy file="${API_NAME}_${API_VERSION}.yaml" todir="${basedir}/apis/${API_NAME}"/>
        <copy file="${PRODUCT_NAME}_${API_VERSION}.yaml" todir="${basedir}/products/${PRODUCT_NAME}"/>

        <!-- Checkout main branch to avoid detached HEAD -->
        <exec executable="git" dir="${basedir}">
            <arg value="checkout"/>
            <arg value="-B"/>
            <arg value="main"/>
        </exec>

        <!-- Git add -->
        <exec executable="git" dir="${basedir}">
            <arg value="add"/>
            <arg value="apis/${API_NAME}/${API_NAME}_${API_VERSION}.yaml"/>
            <arg value="products/${PRODUCT_NAME}/${PRODUCT_NAME}_${API_VERSION}.yaml"/>
        </exec>

        <!-- Git commit with Jenkins credentials -->
        <exec executable="git" dir="${basedir}">
            <arg value="commit"/>
            <arg value="-m"/>
            <arg value="Backup ${API_NAME}:${API_VERSION} &amp; ${PRODUCT_NAME}:${API_VERSION} at ${DSTAMP}_${TSTAMP}"/>
            <env key="GIT_COMMITTER_NAME" value="${env.GIT_COMMITTER_NAME}"/>
            <env key="GIT_COMMITTER_EMAIL" value="${env.GIT_COMMITTER_EMAIL}"/>
        </exec>

        <!-- Git push to origin/main -->
        <exec executable="git" dir="${basedir}">
            <arg value="push"/>
            <arg value="origin"/>
            <arg value="main"/>
        </exec>
    </target>

    <!-- Full CI/CD pipeline -->
    <target name="ci" depends="backup,publish">
        <echo message="✅ CI/CD pipeline completed successfully!"/>
    </target>
</project>
