<project name="apic-cicd" default="ci" basedir=".">

  <!-- Default properties -->
  <property name="API_NAME" value="loan-api"/>
  <property name="API_VERSION" value="1.0.0"/>
  <property name="PRODUCT_NAME" value="loan-product"/>
  <property name="CATALOG_NAME" value="prod"/>

  <!-- 🔐 APIC Login -->
  <target name="login">
    <echo message="🔐 Logging in to API Connect..."/>
    <exec executable="apic" failonerror="true">
      <arg value="login"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--username"/>
      <arg value="umesh"/>
      <arg value="--password"/>
      <arg value="!n0r1t5@C"/>
      <arg value="--realm"/>
      <arg value="provider/default-idp-2"/>
    </exec>
  </target>

  <!-- ✅ Validate API YAML -->
  <target name="validate" depends="login">
    <echo message="✅ Validating API YAML for ${API_NAME}_${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="validate"/>
      <arg value="apis/${API_NAME}/${API_NAME}_${API_VERSION}.yaml"/>
    </exec>
  </target>

  <!-- 🔎 Check API existence -->
  <target name="api-check" depends="validate">
    <echo message="🔎 Checking if API exists..."/>
    <exec executable="apic" failonerror="false" outputproperty="api.exists">
      <arg value="draft-apis:get"/>
      <arg value="${API_NAME}:${API_VERSION}"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
    <echo message="API exists? ${api.exists}"/>
  </target>

  <!-- ⚙️ Process API -->
  <target name="api-process" depends="api-check">
    <condition property="api.exists.true">
      <and>
        <isset property="api.exists"/>
        <matches string="${api.exists}" pattern=".*${API_NAME}:${API_VERSION}.*"/>
      </and>
    </condition>
    <antcall target="api-update"/>
    <antcall target="api-create"/>
  </target>

  <target name="api-create" unless="api.exists.true">
    <echo message="🆕 Creating new draft API ${API_NAME}:${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="draft-apis:create"/>
      <arg value="apis/${API_NAME}/${API_NAME}_${API_VERSION}.yaml"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
  </target>

  <target name="api-update" if="api.exists.true">
    <echo message="♻️ Updating existing draft API ${API_NAME}:${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="draft-apis:update"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
      <arg value="${API_NAME}:${API_VERSION}"/>
      <arg value="apis/${API_NAME}/${API_NAME}_${API_VERSION}.yaml"/>
    </exec>
  </target>

  <!-- 🔧 Fix refs in Product YAML -->
  <target name="fix-refs">
    <echo message="🔧 Fixing API references in product YAML..."/>
    <exec executable="sed" output="products/${PRODUCT_NAME}_${API_VERSION}_fixed.yaml">
      <arg value="s#\./${API_NAME}_${API_VERSION}\.yaml#../../apis/${API_NAME}/${API_NAME}_${API_VERSION}.yaml#g"/>
      <arg value="products/${PRODUCT_NAME}_${API_VERSION}.yaml"/>
    </exec>
  </target>

  <!-- 🔎 Check Product existence -->
  <target name="product-check" depends="api-process,fix-refs">
    <echo message="🔎 Checking if Product exists..."/>
    <exec executable="apic" failonerror="false" outputproperty="product.exists">
      <arg value="draft-products:get"/>
      <arg value="${PRODUCT_NAME}:${API_VERSION}"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
    <echo message="Product exists? ${product.exists}"/>
  </target>

  <!-- ⚙️ Process Product -->
  <target name="product-process" depends="product-check">
    <condition property="product.exists.true">
      <and>
        <isset property="product.exists"/>
        <matches string="${product.exists}" pattern=".*${PRODUCT_NAME}:${API_VERSION}.*"/>
      </and>
    </condition>
    <antcall target="product-update"/>
    <antcall target="product-create"/>
  </target>

  <target name="product-create" depends="fix-refs" unless="product.exists.true">
    <echo message="🆕 Creating new draft Product ${PRODUCT_NAME}:${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="draft-products:create"/>
      <arg value="products/${PRODUCT_NAME}_${API_VERSION}_fixed.yaml"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
  </target>

  <target name="product-update" depends="fix-refs" if="product.exists.true">
    <echo message="♻️ Updating existing draft Product ${PRODUCT_NAME}:${API_VERSION}"/>
    <exec executable="apic" failonerror="true">
      <arg value="draft-products:update"/>
      <arg value="${PRODUCT_NAME}:${API_VERSION}"/>
      <arg value="products/${PRODUCT_NAME}_${API_VERSION}_fixed.yaml"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
      <arg value="--org"/>
      <arg value="indusapi-np"/>
    </exec>
  </target>

  <!-- 🚀 Publish Product -->
  <target name="publish" depends="product-process">
    <echo message="🚀 Publishing Product ${PRODUCT_NAME}:${API_VERSION} to catalog ${CATALOG_NAME}"/>
    <exec executable="apic" failonerror="true">
      <arg value="products:publish"/>
      <arg value="${PRODUCT_NAME}:${API_VERSION}"/>
      <arg value="--catalog"/>
      <arg value="indusapi-np/${CATALOG_NAME}"/>
      <arg value="--server"/>
      <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
    </exec>
  </target>

  <!-- 🎉 CI Pipeline -->
  <target name="ci" depends="publish">
    <echo message="🎉 CI/CD pipeline completed successfully!"/>
  </target>

</project>
