<?xml version="1.0" encoding="UTF-8"?>
<project name="apic-cicd" default="ci" basedir=".">

    <!-- ================== Properties ================== -->
    <property name="api.dir" location="apis"/>
    <property name="product.dir" location="products"/>
    <property name="catalog.name" value="${CATALOG_NAME}"/>
    <property name="api.name" value="${API_NAME}"/>
    <property name="api.version" value="${API_VERSION}"/>
    <property name="product.name" value="${PRODUCT_NAME}"/>
    <property name="product.version" value="${PRODUCT_VERSION}"/>
    <property name="publish" value="${publish}"/>

    <!-- ================== Main CI target ================== -->
    <target name="ci" depends="login,validate,api-draft,product-draft,publish-product"/>

    <!-- ================== Login ================== -->
    <target name="login">
        <echo message="🔐 Logging in to API Connect..." />
        <exec executable="apic" failonerror="true">
            <arg value="login"/>
            <arg value="--server"/>
            <arg value="https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com"/>
            <arg value="--username"/>
            <arg value="umesh"/>
            <arg value="--password"/>
            <arg value="!n0r1t5@C"/>
            <arg value="--realm"/>
            <arg value="provider/default-idp-2"/>
        </exec>
    </target>

    <!-- ================== Validate API ================== -->
    <target name="validate">
        <echo message="✅ Validating API YAML for ${api.name}" />
        <exec executable="apic" failonerror="true">
            <arg value="validate"/>
            <arg value="${api.dir}/${api.name}.yaml"/>
        </exec>
    </target>

    <!-- ================== API Draft ================== -->
    <target name="api-draft" depends="validate">
        <echo message="📦 Processing draft API ${api.name}:${api.version}..." />

        <!-- Check if API exists -->
        <exec executable="bash" failonerror="false" outputproperty="api.exists.check">
            <arg value="-c"/>
            <arg value="apic draft-apis:list-all --server https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --org indusapi-np | grep -w '${api.name}:${api.version}'"/>
        </exec>

        <condition property="api.exists">
            <matches string="${api.exists.check}" pattern=".*"/>
        </condition>

        <echo message="API exists? ${api.exists}" />

        <!-- Directly call update if exists, otherwise create -->
        <target name="api-process">
            <echo message="🛠 Processing API draft..."/>
            <condition property="do.update">
                <isset property="api.exists"/>
            </condition>

            <sequential>
                <echo message="API exists? ${api.exists}"/>
                <exec executable="apic" failonerror="true" osfamily="unix">
                    <arg line="draft-apis:update --server https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --org indusapi-np ${api.name}:${api.version} ${api.dir}/${api.name}.yaml"/>
                </exec>
            </sequential>
        </target>

        <!-- If not exists, create -->
        <target name="api-create-if-missing">
            <condition property="do.create">
                <not>
                    <isset property="api.exists"/>
                </not>
            </condition>

            <sequential>
                <echo message="Creating API draft as it does not exist..."/>
                <exec executable="apic" failonerror="true" osfamily="unix">
                    <arg line="draft-apis:create --server https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --org indusapi-np ${api.dir}/${api.name}.yaml"/>
                </exec>
            </sequential>
        </target>
    </target>

    <!-- ================== Product Draft ================== -->
    <target name="product-draft">
        <echo message="📦 Processing draft Product ${product.name}:${product.version}" />

        <!-- Check if Product exists -->
        <exec executable="bash" failonerror="false" outputproperty="product.exists.check">
            <arg value="-c"/>
            <arg value="apic draft-products:list-all --server https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --org indusapi-np | grep -w '${product.name}:${product.version}'"/>
        </exec>

        <condition property="product.exists">
            <matches string="${product.exists.check}" pattern=".*"/>
        </condition>

        <echo message="Product exists? ${product.exists}" />

        <!-- Directly call update if exists, otherwise create -->
        <target name="product-process">
            <echo message="🛠 Processing Product draft..."/>
            <condition property="do.update.product">
                <isset property="product.exists"/>
            </condition>

            <sequential>
                <echo message="Product exists? ${product.exists}"/>
                <exec executable="apic" failonerror="true" osfamily="unix">
                    <arg line="draft-products:update --server https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --org indusapi-np ${product.name}:${product.version} ${product.dir}/${product.name}.yaml"/>
                </exec>
            </sequential>
        </target>

        <target name="product-create-if-missing">
            <condition property="do.create.product">
                <not>
                    <isset property="product.exists"/>
                </not>
            </condition>

            <sequential>
                <echo message="Creating Product draft as it does not exist..."/>
                <exec executable="apic" failonerror="true" osfamily="unix">
                    <arg line="draft-products:create --server https://small-1-mgmt-api-manager-cp4i.apps.ocp.prontefflabs.com --org indusapi-np ${product.dir}/${product.name}.yaml"/>
                </exec>
            </sequential>
        </target>
    </target>

    <!-- ================== Publish Product ================== -->
    <target name="publish-product" if="publish">
        <echo message="🚀 Publishing Product ${product.name}:${product.version} to catalog ${catalog.name}" />
        <exec executable="apic" failonerror="true">
            <arg value="products:publish"/>
            <arg value="${product.dir}/${product.name}.yaml"/>
            <arg value="--catalog"/>
            <arg value="${catalog.name}"/>
        </exec>
    </target>

</project>
